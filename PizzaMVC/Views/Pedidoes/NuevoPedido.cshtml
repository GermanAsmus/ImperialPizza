@model PizzaMVC.ViewModels.PedidoViewModel

@using PizzaMVC.Models
@{
    ViewBag.Title = "Nuevo Pedido";
    List<Producto> listaProductos = ViewBag.Productos;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal well" style="margin-top:10px">
        <h2>Nuevo Pedido</h2>
        <h4>Cliente</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Cliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cliente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Localidad.LocalidadID, "Localidad", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LocalidadID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Localidad.LocalidadID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
            </div>
        </div>



        <h2>Detalle Pedido</h2>
        <table class="table" id="myTable">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductoPedido.Nombre)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductoPedido.Cantidad)
                    </th>
                    <th>
                        @Html.DisplayName("Precio Unitario")
                    </th>
                </tr>
            @Html.Partial("_DetallePedido")
            @*<tr>
                <td>
                    @Html.DisplayName("Producto")
                </td>
                <td>
                    @Html.Editor("Cantidad", new { htmlAttributes = new { @class = "form-control" } })
                </td>
                <td>
                    @Html.Display("Precio", new { htmlAttributes = new { @class = "form-control" } })
                </td>
            </tr>*@
        </table>
        <script src="~/Scripts/agregarNuevoProducto.js"></script>
        <button onclick="return myFunction()">Try it</button>
       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Confirmar" id="NuevoPedido" class="btn btn-success" />
            </div>
        </div>

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}